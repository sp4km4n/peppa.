import pygame
import time
import random
import sqlite3 as sq

class DBConnector:
    def __init__(self):
        self.open_connection()

    def open_connection(self):
        self.con=sq.connect("database.db")
        self.cur=self.con.cursor()
    
    def get_points(self):
        create_sql="create table if not exists game (point integer)"
        self.cur.execute(create_sql)
        self.con.commit()
        sql='select * from game order by point desc limit 5;'
        return self.cur.execute(sql).fetchall()
    
    def write_points(self,point):
        sql=f'insert into game (point) values ({point});'
        self.cur.execute(sql)
        self.con.commit()

    def close_connection(self):
        self.con.close()



class Pig(pygame.sprite.Sprite):
    def __init__(self,x,y, wi,he, img_path):
        pygame.sprite.Sprite.__init__(self)
        self.x=x
        self.y=y
        self.w=wi
        self.h=he
        
        sprite_img=pygame.image.load(img_path).convert_alpha()
        self.image=pygame.transform.scale(sprite_img, (self.w,self.h))
        self.rect=self.image.get_rect(topleft=(x,y))

    def move_by_keys(self):
        keys=pygame.key.get_pressed()
        if keys[pygame.K_w]:
            ...
        elif keys[pygame.K_a] and self.rect.x>40:
            self.rect.x-=space_row
        elif keys[pygame.K_d] and self.rect.x<w-space_row:
            self.rect.x+=space_row
        elif keys[pygame.K_s]:
            ...
    
    
    
    def draw(self,win):
        win.blit(self.image,(self.rect.x,self.y))
class Bomb:
    def __init__(self,x,y, wi,he, img_path):
        pygame.sprite.Sprite.__init__(self)
        self.x=x
        self.y=y
        self.w=wi
        self.h=he
        self.time=time.time()
        sprite_img=pygame.image.load(img_path).convert_alpha()
        self.image=pygame.transform.scale(sprite_img, (self.w,self.h))
        self.rect=self.image.get_rect(topleft=(x,y))

    def move(self, timer):
        diff=time.time()-self.time
        if diff>timer:
            self.rect.y+=space_col
            self.time=time.time()
    
    def draw(self,win):
        win.blit(self.image,self.rect)

pygame.init()

w=600
h=600
square=5
space_col= w//square
space_row=h//square
k=0
black=(0,0,0)
white=(255,255,255)
win=pygame.display.set_mode((w,h))
bombs=[Bomb(0, -space_col*random.randint(0,5),space_col*1, space_row*1,'нож.png')]
for i in range(1,square):
    bombs.append(Bomb(i*space_row,-space_col*random.randint(0,5),space_col*1,space_row*1,'нож.png'))
pig=Pig(0,h-240,space_row*1, space_col*2,'свинка.webp')
timer=2


square=5
space_col= w//square
space_row=h//square


now=time.time()

db=DBConnector()
points=db.get_points()
print(points)
texts=[]
for i in range(len(points)):
    f=pygame.font.SysFont('arial' , 48)
    text=f.render(str(points[i][0]), 1, (255,255,255))
    text_pos=text.get_rect(topleft=(10,10+i*45))
    texts.append((text, text_pos))



while True:
    for event in pygame.event.get():
        if event.type==pygame.QUIT:
            exit()

    win.fill(black)
    for i in range(square):
        pygame.draw.line(win, white, (i*space_col, 0), (i*space_col,h))

    for i in range(square):
        pygame.draw.line(win, white, (0,i*space_row), (w,i*space_col))

    diff=time.time()-now
    if diff>timer:
        timer-=0.01
        now=time.time()


    
    pig.move_by_keys()
    for bomb in bombs:
        bomb.move(timer)
        if bomb.rect.y>h:
            y=random.randrange(-space_col*5,0,space_col)
            bomb.rect.y=y
            k+=100
        bomb.draw(win)
        if pig.rect.colliderect(bomb.rect):
            db.write_points(k)
            exit()
            

    pig.draw(win)
    for t in texts:
        win.blit(t[0],t[1])

    text=f.render(str(k), 1, (255,255,255))
    text_pos=text.get_rect(topleft=(w/2,10))
    win.blit(text,text_pos)
    pygame.display.update()
    pygame.time.delay(110)
    

    































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































